################################################################################################
#########################################OLSR协议仿真###########################################
################################################################################################

#===========================================
#Get Parameters 获取命令行参数
#===========================================
set opt(nodes) 0
set opt(xx) 0
set opt(yy) 0

proc getopt {argc argv} {
    global opt
    set opt(nodes) [lindex $argv 0]
	set opt(xx) [lindex $argv 1]
	set opt(yy) [lindex $argv 2]
}
getopt $argc $argv;

#===========================================
#Define options 定义无线节点参数和其他常量
#===========================================
set val(chan)           Channel/WirelessChannel    ;# Channel Type 物理信道类型是无线信道
set val(prop)           Propagation/TwoRayGround   ;# radio-propagation model 无线传输模型是 TwoRayGround
set val(netif)          Phy/WirelessPhy            ;# network interface type 网络接口类型是无线物理层
set val(mac)            Mac/802_11                 ;# MAC type MAC 层协议采用802.11协议
set val(ifq)            Queue/DropTail/PriQueue    ;# interface queue type 接口队列类型是 IFQ 类型
set val(ll)             LL                         ;# link layer type 逻辑链路层类型 LL 层
set val(ant)            Antenna/OmniAntenna        ;# antenna model 天线模型是全向天线
set val(ifqlen)         50                         ;# max packet in ifq 网络接口队列的大小是50
set val(nn)             $opt(nodes)                ;# number of mobilenodes 无线节点有50个
set val(rp)             OLSR                       ;# routing protocol 无线路由协议是 OLSR 协议
set val(x)				$opt(xx)				   ;# topological range——Length 设定拓扑范围——长度，1000m
set val(y)				$opt(yy)				   ;# topological range——Width 设定拓扑范围——宽度，300m
set val(stop)			150.0					   ;# simulation time 设定模拟时间，10s 
set opt(cp) "cbr-30n-10c-2p";		   			   ;# use the cbr file generated by cbrgen.tcl 使用的 CBR 文件
set opt(sc) "scene-30n-0p-10M-150t-600-600";	   ;# use the scence file generated by setdest 使用的场景文件


#===============================
# Main Program 主程序
#===============================

#Create a simulator object 建立一个 simulator 实例
set ns_ [new Simulator]

#Open the trace file 设置 trace
set tracefd [open olsr.tr w]
$ns_ trace-all $tracefd
#$ns_ use-newtrace

#Open the nam file 设置 nam
set namtracefd [open olsr.nam w]
$ns_ namtrace-all-wireless $namtracefd $val(x) $val(y)

#set the simulation topography 建立 topology 对象
set topo [new Topography]
$topo load_flatgrid $val(x) $val(y)

#set the god 建立 god 对象
set god_ [new God]
create-god $val(nn)

# configure the network 无线节点配置
$ns_ node-config -adhocRouting $val(rp) \
				 -llType $val(ll) \
				 -macType $val(mac) \
				 -ifqType $val(ifq) \
				 -ifqLen $val(ifqlen) \
				 -antType $val(ant) \
				 -propType $val(prop) \
				 -phyType $val(netif) \
				 -channelType $val(chan) \
				 -topoInstance $topo \
				 -agentTrace ON \
				 -routerTrace ON \
				 -macTrace OFF \
				 -movementTrace OFF \

#Create mobilenodes with number of val(nn) 根据定义的节点数目创建移动节点
for {set i 0} {$i<$val(nn)} {incr i} {
	set node_($i) [$ns_ node]
	$node_($i) random-motion 0
}
 
#Use the cbr file and scence file 导入 CBR 和场景配置
source $opt(cp)
source $opt(sc)

#Define node initial position in nam 定义 nam 中的节点
for { set i 0 } { $i < $val(nn) } { incr i } {
    # defines the node size in nam 定义 nam 中的节点显示大小
    $ns_ initial_node_pos $node_($i) 20
}

#Schedule envents for simualtion 设置结束的模拟事件
for {set i 0} {$i<$val(nn)} {incr i} {
	$ns_ at [expr $val(stop)-0.0002] "$node_($i) reset";
}
$ns_ at [expr $val(stop)-0.0001] "stop"
$ns_ at $val(stop) "puts \"NS EXITING...\"; $ns_ halt"

#Define a 'finish' or 'stop' procedure 定义结束过程，关闭 Trace 文件和 NAM 显示文件，模拟结束时调用
proc stop {} {
	#record the simalation process to trace and nam file
	global ns_ tracefd namtracefd
	$ns_ flush-trace

	#Close the trace file
	close $tracefd

	#Close the nam file
	close $namtracefd

	#Execute NAM on the nam file
	# exec nam olsr.nam &
	exit 0
}

#Run the simulation 执行模拟
$ns_ run